--------------------Program Started Successfully-----------------------------

resize() -> initialization yet not completed
Overlay size set to 0.400 (fraction of min dimension)
fillInstanceExtensionNames() -> Fisrt Call to vkEnumerateInstanceExtensionProperties Succeeded
fillInstanceExtensionNames() -> Secound Call to vkEnumerateInstanceExtensionProperties Succeeded
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_device_group_creation
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_external_fence_capabilities
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_external_memory_capabilities
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_external_semaphore_capabilities
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_get_physical_device_properties2
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_get_surface_capabilities2
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_surface
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_surface_protected_capabilities
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_win32_surface
fillInstanceExtensionNames() -> vulkan extension name = VK_EXT_debug_report
fillInstanceExtensionNames() -> vulkan extension name = VK_EXT_debug_utils
fillInstanceExtensionNames() -> vulkan extension name = VK_EXT_surface_maintenance1
fillInstanceExtensionNames() -> vulkan extension name = VK_EXT_swapchain_colorspace
fillInstanceExtensionNames() -> vulkan extension name = VK_NV_external_memory_capabilities
fillInstanceExtensionNames() -> vulkan extension name = VK_KHR_portability_enumeration
fillInstanceExtensionNames() -> vulkan extension name = VK_LUNARG_direct_driver_loading
fillInstanceExtensionNames() -> VK_KHR_SURFACE_EXTENSION_NAME found
fillInstanceExtensionNames() -> VK_KHR_WIN32_SURFACE_EXTENSION_NAME found
fillInstanceExtensionNames() -> Validation is on and VK_EXT_DEBUG_REPORT_EXTENSION_NAME supported
fillInstanceExtensionNames() -> enabled vulkan Instance Extension name = VK_KHR_surface
fillInstanceExtensionNames() -> enabled vulkan Instance Extension name = VK_KHR_win32_surface
fillInstanceExtensionNames() -> enabled vulkan Instance Extension name = VK_EXT_debug_report
createVulkanInstance() -> fillInstanceExtensionNames() Succeeded
fillValidationLayerNames() -> Fisrt Call to vkEnumerateInstanceLayerProperties() Succeeded
fillValidationLayerNames() -> Secound Call to vkEnumerateInstanceLayerProperties() Succeeded
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_NV_optimus
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_NV_present
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_NV_nomad_release_public_2025_3_0
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_NV_GPU_Trace_release_public_2025_3_0
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_NV_ngfx_capture_release_public_2025_3_0
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_NV_shader_debugger_release_public_2025_3_0
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_RENDERDOC_Capture
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_OBS_HOOK
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_LUNARG_api_dump
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_LUNARG_gfxreconstruct
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_KHRONOS_synchronization2
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_KHRONOS_validation
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_LUNARG_monitor
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_LUNARG_screenshot
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_KHRONOS_profiles
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_KHRONOS_shader_object
fillValidationLayerNames() -> vulkan layer name = VK_LAYER_LUNARG_crash_diagnostic
[VALIDATION ON]fillValidationLayerNames()->VK_LAYER_KHRONOS_validation found successfully
createVulkanInstance() -> fillValidationLayerNames() Succeeded
createVulkanInstance() -> vkCreateInstance() succeeded
createValidationCallbackFunction -> vkGetInstanceProcAddr() succeeded to get function pointer for PFN_vkCreateDebugReportCallbackEXT
createValidationCallbackFunction -> vkGetInstanceProcAddr() succeeded to get function pointer for PFN_vkDestroyDebugReportCallbackEXT
createValidationCallbackFunction -> vkCreateDebugReportCallbackEXT succeeded
createVulkanInstance() -> createValidationCallbackFunction() Succeeded
initialize() -> createVulkanInstance() Succeeded
getSupportedSurface -> vkCreateWin32SurfaceKHR Succeeded
initialize() -> getSupportedSurface() Succeeded
getPhysicalDevice() -> First call to vkEnumeratePhysicalDevices() Succeeded
getPhysicalDevice() -> Second call to vkEnumeratePhysicalDevices() Succeeded
getPhysicalDevice() -> isQueueSurfaceSupported_array is free
getPhysicalDevice() -> vkQueueFamilyProperties_array is free
getPhysicalDevice() is succeeded to select required physical device with graphics enabled
getPhysicalDevice() -> selected physical device support tessellation Shader
getPhysicalDevice() -> selected physical device support geometry Shader
initialize() -> getPhysicalDevice() Succeeded

******************************** PRINT VULKAN INFORMATION *****************************************
API Version 		-> 1.4.312
Device Name 		-> NVIDIA GeForce RTX 4090
Device Type		-> Discrete GPU(dGPU)
Vendor ID		-> 0x10de
Device ID		-> 0x2684
printVKInfo() -> vkPhysicalDevice_array is free successfully

******************************** END VULKAN INFORMATION *****************************************
initialize() -> printVKInfo() Succeeded
fillDeviceExtensionNames() -> Fisrt Call to vkEnumerateDeviceExtensionProperties() Succeeded
fillDeviceExtensionNames() -> Secound Call to vkEnumerateDeviceExtensionProperties() Succeeded
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_16bit_storage
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_8bit_storage
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_acceleration_structure
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_bind_memory2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_buffer_device_address
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_calibrated_timestamps
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_compute_shader_derivatives
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_cooperative_matrix
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_copy_commands2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_create_renderpass2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_dedicated_allocation
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_deferred_host_operations
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_depth_clamp_zero_one
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_depth_stencil_resolve
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_descriptor_update_template
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_device_group
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_draw_indirect_count
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_driver_properties
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_dynamic_rendering
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_dynamic_rendering_local_read
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_external_fence
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_external_fence_win32
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_external_memory
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_external_memory_win32
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_external_semaphore
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_external_semaphore_win32
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_format_feature_flags2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_fragment_shader_barycentric
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_fragment_shading_rate
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_get_memory_requirements2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_global_priority
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_image_format_list
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_imageless_framebuffer
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_index_type_uint8
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_line_rasterization
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_load_store_op_none
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance1
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance3
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance4
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance5
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance6
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance7
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_maintenance8
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_map_memory2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_multiview
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_pipeline_binary
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_pipeline_executable_properties
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_pipeline_library
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_present_id
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_present_wait
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_push_descriptor
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_ray_query
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_ray_tracing_maintenance1
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_ray_tracing_pipeline
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_ray_tracing_position_fetch
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_relaxed_block_layout
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_sampler_mirror_clamp_to_edge
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_sampler_ycbcr_conversion
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_separate_depth_stencil_layouts
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_atomic_int64
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_bfloat16
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_clock
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_draw_parameters
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_expect_assume
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_float16_int8
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_float_controls
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_float_controls2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_integer_dot_product
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_maximal_reconvergence
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_non_semantic_info
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_quad_control
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_relaxed_extended_instruction
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_subgroup_extended_types
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_subgroup_rotate
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_subgroup_uniform_control_flow
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_shader_terminate_invocation
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_spirv_1_4
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_storage_buffer_storage_class
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_swapchain
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_swapchain_mutable_format
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_synchronization2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_timeline_semaphore
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_uniform_buffer_standard_layout
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_variable_pointers
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_vertex_attribute_divisor
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_decode_av1
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_decode_h264
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_decode_h265
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_decode_queue
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_decode_vp9
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_encode_av1
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_encode_h264
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_encode_h265
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_encode_quantization_map
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_encode_queue
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_maintenance1
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_maintenance2
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_video_queue
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_vulkan_memory_model
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_win32_keyed_mutex
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_workgroup_memory_explicit_layout
fillDeviceExtensionNames() -> vulkan extension name = VK_KHR_zero_initialize_workgroup_memory
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_4444_formats
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_attachment_feedback_loop_dynamic_state
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_attachment_feedback_loop_layout
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_blend_operation_advanced
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_border_color_swizzle
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_buffer_device_address
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_calibrated_timestamps
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_color_write_enable
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_conditional_rendering
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_conservative_rasterization
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_custom_border_color
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_depth_bias_control
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_depth_clamp_control
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_depth_clamp_zero_one
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_depth_clip_control
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_depth_clip_enable
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_depth_range_unrestricted
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_descriptor_buffer
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_descriptor_indexing
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_device_address_binding_report
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_device_fault
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_device_generated_commands
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_discard_rectangles
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_dynamic_rendering_unused_attachments
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_extended_dynamic_state
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_extended_dynamic_state2
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_extended_dynamic_state3
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_external_memory_host
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_fragment_shader_interlock
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_full_screen_exclusive
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_global_priority
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_global_priority_query
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_graphics_pipeline_library
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_hdr_metadata
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_host_image_copy
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_host_query_reset
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_image_2d_view_of_3d
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_image_robustness
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_image_sliced_view_of_3d
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_image_view_min_lod
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_index_type_uint8
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_inline_uniform_block
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_legacy_vertex_attributes
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_line_rasterization
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_load_store_op_none
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_memory_budget
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_memory_priority
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_mesh_shader
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_multi_draw
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_mutable_descriptor_type
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_nested_command_buffer
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_non_seamless_cube_map
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_opacity_micromap
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_pageable_device_local_memory
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_pci_bus_info
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_pipeline_creation_cache_control
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_pipeline_creation_feedback
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_pipeline_library_group_handles
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_pipeline_robustness
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_post_depth_coverage
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_present_mode_fifo_latest_ready
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_primitive_topology_list_restart
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_primitives_generated_query
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_private_data
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_provoking_vertex
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_queue_family_foreign
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_robustness2
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_sample_locations
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_sampler_filter_minmax
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_scalar_block_layout
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_separate_stencil_usage
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_atomic_float
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_demote_to_helper_invocation
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_image_atomic_int64
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_module_identifier
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_object
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_replicated_composites
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_subgroup_ballot
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_subgroup_vote
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_shader_viewport_index_layer
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_subgroup_size_control
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_swapchain_maintenance1
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_texel_buffer_alignment
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_tooling_info
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_transform_feedback
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_vertex_attribute_divisor
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_vertex_attribute_robustness
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_vertex_input_dynamic_state
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_ycbcr_2plane_444_formats
fillDeviceExtensionNames() -> vulkan extension name = VK_EXT_ycbcr_image_arrays
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_clip_space_w_scaling
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_cluster_acceleration_structure
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_compute_shader_derivatives
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_cooperative_matrix
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_cooperative_matrix2
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_cooperative_vector
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_copy_memory_indirect
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_corner_sampled_image
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_coverage_reduction_mode
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_cuda_kernel_launch
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_dedicated_allocation
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_dedicated_allocation_image_aliasing
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_descriptor_pool_overallocation
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_device_diagnostic_checkpoints
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_device_diagnostics_config
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_device_generated_commands
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_device_generated_commands_compute
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_disk_cache_utils
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_external_compute_queue
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_external_memory
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_external_memory_win32
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_fill_rectangle
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_fragment_coverage_to_color
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_fragment_shader_barycentric
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_fragment_shading_rate_enums
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_framebuffer_mixed_samples
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_geometry_shader_passthrough
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_inherited_viewport_scissor
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_internal_nvpresent
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_linear_color_attachment
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_low_latency
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_low_latency2
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_memory_decompression
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_mesh_shader
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_optical_flow
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_partitioned_acceleration_structure
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_present_metering
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_raw_access_chains
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_ray_tracing
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_ray_tracing_invocation_reorder
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_ray_tracing_motion_blur
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_representative_fragment_test
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_sample_mask_override_coverage
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_scissor_exclusive
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_shader_atomic_float16_vector
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_shader_image_footprint
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_shader_sm_builtins
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_shader_subgroup_partitioned
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_shading_rate_image
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_viewport_array2
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_viewport_swizzle
fillDeviceExtensionNames() -> vulkan extension name = VK_NV_win32_keyed_mutex
fillDeviceExtensionNames() -> vulkan extension name = VK_NVX_binary_import
fillDeviceExtensionNames() -> vulkan extension name = VK_NVX_image_view_handle
fillDeviceExtensionNames() -> vulkan extension name = VK_NVX_multiview_per_view_attributes
fillDeviceExtensionNames() -> vulkan extension name = VK_AMD_buffer_marker
fillDeviceExtensionNames() -> vulkan extension name = VK_GOOGLE_hlsl_functionality1
fillDeviceExtensionNames() -> vulkan extension name = VK_GOOGLE_user_type
fillDeviceExtensionNames() -> VK_KHR_SWAPCHAIN_EXTENSION_NAME found
fillDeviceExtensionNames() -> enabled vulkan Device Extension name = VK_KHR_swapchain
createVulkanDevice() -> fillDeviceExtensionNames() Succeeded
createVulkanDevice() -> vkCreateDevice() Succeeded
initialize() -> createVulkanDevice() Succeeded
getDeviceQueue() -> vkGetDeviceQueue succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() -> first call to vkGetPhysicalDeviceSurfaceFormatsKHR() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() -> second call to vkGetPhysicalDeviceSurfaceFormatsKHR() Succeeded
getPhysicalDeviceSurfaceFormatAndColorSpace() -> vkSurfaceFormatKHR_array is free
createSwapchain() -> getPhysicalDeviceSurfaceFormatAndColorSpace() Succeeded
createSwapchain() -> vkGetPhysicalDeviceSurfaceCapabilitiesKHR() Succeeded
createSwapchain() -> Inside if SwapchainImage width X height = 784 x 561
getPhysicalDevicePresentMode() -> first call to vkGetPhysicalDeviceSurfacePresentModesKHR() Succeeded
getPhysicalDevicePresentMode() -> second call to vkGetPhysicalDeviceSurfacePresentModesKHR() Succeeded
*****mailBox********
getPhysicalDevicePresentMode() -> vkPresentModeKHR_array is free
createSwapchain() -> getPhysicalDevicePresentMode() Succeeded
createSwapchain() -> vkCreateSwapchainKHR() Succeeded
initialize() -> createSwapchain() Succeeded
createImagesAndImageViews() -> first call to vkGetSwapchainImagesKHR() Succeeded
createImagesAndImageViews() -> Second call to vkGetSwapchainImagesKHR() Succeeded
createImagesAndImageViews() Succeeded for iteration 0 -> vkCreateImageViews() Succeeded
createImagesAndImageViews() Succeeded for iteration 1 -> vkCreateImageViews() Succeeded
createImagesAndImageViews() Succeeded for  getSupportedDepthFormat() Succeeded
createImagesAndImageViews() ->  vkCreateImage() Succeeded
createImagesAndImageViews() -> vkAllocateMemory() Succeeded
createImagesAndImageViews() -> vkBindBufferMemory() Succeeded
createImagesAndImageViews() -> vkCreateImageView() Succeeded
initialize() -> createImagesAndImageViews() gave swapchin image count 2 (Succeeded)
createCommandPool() -> vkCreateCommandPool Succeeded
initialize() -> createCommandPool() Succeeded
createCommandBuffers() Succeeded for iteration 0 -> vkAllocateCommandBuffers() Succeeded
createCommandBuffers() Succeeded for iteration 1 -> vkAllocateCommandBuffers() Succeeded
initialize() -> createCommandBuffers() Succeeded
createVertexBuffer() -> vkCreateBuffer() Succeeded
createVertexBuffer() -> vkAllocateMemory() Succeeded
createVertexBuffer() -> vkBindBufferMemory() Succeeded
createVertexBuffer() -> vkMapMemory() Succeeded
createVertexBuffer() -> vkCreateBuffer() Succeeded vertex texcoord
createVertexBuffer() -> vkAllocateMemory() Succeeded for vertex texcoord buffer
createVertexBuffer() -> vkBindBufferMemory() Succeeded for vertex color buffer
createVertexBuffer() -> vkMapMemory() Succeeded for vertex color buffer
initialize() -> createVertexBuffer() Succeeded
Image data copied into staging buffer
initialize() -> createTexture() for kundali Succeeded
createUniformBuffer() -> vkCreateBuffer() Succeeded
createUniformBuffer() -> vkAllocateMemory() Succeeded
createUniformBuffer() -> vkBindBufferMemory() Succeeded
createUniformBuffer() -> updateUniformBuffer() Succeeded
initialize() -> createUniformBuffer() Succeeded
createShaders() -> shader.vert.spv Succeeded
createShaders() -> read shader.vert.spv Succeeded
createShaders() -> vertex shader module created
createShaders() -> shader.frag.spv Succeeded
createShaders() -> read shader.frag.spv Succeeded
createShaders() -> vkCreateShaderModule() for vkShaderModule_fragment_shader Succeeded
createShaders() -> fragment shader module created
initialize() -> createShaders() Succeeded
createDescriptorSetLayout() -> vkCreateDescriptorSetLayout() Succeeded
initialize() -> createDescriptorSetLayout() Succeeded
createPipelineLayout() -> vkCreatePipelineLayout() Succeeded
initialize() -> createPipelineLayout() Succeeded
createDescriptorPool() -> vkCreateDescriptorPool() Succeeded
initialize() -> createDescriptorPool() Succeeded
initialize() -> overlay[0] loaded: 01_Mesh.png
initialize() -> overlay[1] loaded: 02_Vrushabh.png
initialize() -> overlay[2] loaded: 03_Mithun.png
initialize() -> overlay[3] loaded: 04_Karka.png
initialize() -> overlay[4] loaded: 05_Simha.png
initialize() -> overlay[5] loaded: 06_Kanya.png
initialize() -> overlay[6] loaded: 07_Tula.png
initialize() -> overlay[7] loaded: 08_Vruschik.png
initialize() -> overlay[8] loaded: 09_Dhanu.png
initialize() -> overlay[9] loaded: 10_Makar.png
initialize() -> overlay[10] loaded: 11_Kumbh.png
initialize() -> overlay[11] loaded: 12_Meen.png
vkUpdateDescriptorSets completed successfully
initialize() -> createDescriptorSet() Succeeded
createRenderpass() -> vkCreateRenderPass() Succeeded
initialize() -> createRenderpass() Succeeded
createPipeline() -> vkCreatePipelineCache() Succeeded
createPipeline() -> vkCreateGraphicsPipelines() Succeeded
initialize() -> createPipeline() Succeeded
createFrameBuffers() -> vkCreateFramebuffer() Succeeded
createFrameBuffers() -> vkCreateFramebuffer() Succeeded
initialize() -> createFrameBuffer() Succeeded
createSemaphore() -> First call to vkCreateSemaphore() Succeeded
createSemaphore() -> Second call to vkCreateSemaphore() Succeeded
initialize() -> createSemaphore() Succeeded
createFences() -> vkCreateFence() Succeeded
createFences() -> vkCreateFence() Succeeded
initialize() -> createFences() Succeeded
buildCommandBuffers() -> vkCommandBuffer_array(0) Succeeded
buildCommandBuffers() -> vkBeginCommandBuffer(0) Succeeded
buildCommandBuffers() -> vkCommandBuffer_array(1) Succeeded
buildCommandBuffers() -> vkBeginCommandBuffer(1) Succeeded
initialize() -> buildCommandBuffers() Succeeded
initialize() -> Initialization Completed Successfully

*********************************************************************************************************

WinMain -> initialize() is Succeeded
uninitialize() -> vkFence_array free
uninitialize() -> vkSemaphore_renderComplete free
uninitialize() -> vkSemaphore_backBuffer free
uninitialize() -> vkFramebuffer_array free
uninitialize() -> vkDescriptorSetLayout free
uninitialize() -> vkDestroyPipelineLayout() free
uninitialize() -> vkDestroyPipeline() free
uninitialize() -> vkDestroyRenderPass
uninitialize() -> vkDescriptorPool and vkDescriptorSet are destroyed
uninitialize() -> vkDestroyShaderModule() fragment shader
uninitialize() -> vkDestroyShaderModule() vertex shader
uninitialize() -> vkFreeMemory(), uniformData.vkDeviceMemory
uninitialize() -> vkDestroyBuffer(), uniformData.vkBuffer
uninitialize() -> vkDestroySampler()
uninitialize() -> vkDestroyImageView()
uninitialize() -> vkDeviceMemory_texture()
uninitialize() -> vkImage_texture
uninitialize() -> vertexData_texcoord.vkDeviceMemory
uninitialize() -> vertexData_texcoord.vkBuffer
uninitialize() -> vertexData_position.vkDeviceMemory
uninitialize() -> vertexData_position.vkBuffer
uninitialize() -> vkFreeCommandBuffers() is succeeded 0
uninitialize() -> vkFreeCommandBuffers() is succeeded 1
uninitialize() -> vkDestroyImageView for depth
uninitialize() ->vkDeviceMemory_depth
uninitialize() ->vkImage_depth
uninitialize() -> vkCommandBuffer_array free
uninitialize() -> vkCommandPool free
uninitialize() -> vkDestroyImageView() is succeeded 0
uninitialize() -> vkDestroyImageView() is succeeded 1
uninitialize() -> swapchainImageView_array free
uninitialize() -> swapchainImage_array free
uninitialize() -> vkDestroySwapchainKHR is Done
uninitialize() -> vkDeviceWaitIdle is Done
uninitialize() -> vkDestroyDevice is Done
uninitialize() -> vkDestroySurfaceKHR() succeeded
uninitialize() -> vkDebugReportCallbackEXT() succeeded
uninitialize -> vkDestroyInstance() succeeded 

-----------------Program Ended Successfully---------------------

